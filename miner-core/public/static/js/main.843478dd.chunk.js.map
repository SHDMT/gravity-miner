{"version":3,"sources":["app/pagecontainer.jsx","app/viewpart/nav/navlogo.jsx","app/viewpart/tools/pagetool.js","app/viewpart/nav/navpageview.jsx","app/request.js","app/viewpart/home/blockchaininfopanel.jsx","app/viewpart/home/miningcontroller.jsx","app/viewpart/home/homepage.jsx","app/viewpart/mining/miningpage.jsx","app/viewpart/reward/rewardpage.jsx","app/viewpart/setting/settingpage.jsx","app/viewpart/header/headerview.jsx","app/viewpart/footer/footerview.jsx","app/mainpageview.jsx","app/loginpageview.jsx","App.js","serviceWorker.js","index.js"],"names":["PageContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pages","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","v","push","err","return","selectedPage","selected","react_default","a","createElement","className","map","entry","index","showPage","refresh","key","obj","style","display","Component","NavLogo","src","title","pagetool","selectPage","id","evt","CustomEvent","detail","window","dispatchEvent","NavPageView","invokeSelectPage","itemList","setupPage","_this2","forEach","page","name","toLowerCase","icon","img","PageTool","customIcon","es_icon","type","_this3","logo","showLogo","navlogo","menu","defaultSelectedKeys","defaultOpenKeys","mode","item","Item","onClick","handleClick","buildIcon","server","request","req","params","callback","axios","post","qs","stringify","then","response","data","catch","error","status","BlockChainInfoPanel","state","height","mci","isCommittee","res","setState","info","currentHeight","currentMCI","intervalObj","setInterval","onInterval","clearInterval","row","gutter","col","span","card","bordered","width","dataset","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","animation","scales","yAxes","ticks","beginAtZero","MiningController","ismining","action","address","console","log","ncore","message","success","startRecord","stopRecord","time","timeFmt","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","endTime","timeFormat","Date","length","splice","_this4","_this5","_this6","btn","es_button","handleStartMining","es","redraw","HomePage","blockchaininfopanel","miningcontroller","FormItem","Form","SettingPage","miningAddress","e","target","addr","hasFeedback","validateStatus","help","input","placeholder","onChange","handleMiningAddress","handleSubmit","HeaderView","selectedKeys","handleLogout","theme","dropdown","overlay","trigger","fontSize","FooterView","Header","Layout","Content","Sider","Footer","MainPageView","currentID","Map","setupPages","addEventListener","addPage","homepage","settingpage","sessionStorage","setItem","arguments","set","getItem","layout","navpageview","headerview","pagecontainer","footerview","LoginPageView","uname","password","passwordHelp","setPasswordFormStatus","margin","loginpageview_FormItem","prefix","color","handleUserName","handlePasswordName","float","handleLogin","App","isLogin","setLogin","removeItem","loginpageview","mainpageview","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.843478dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass PageContainer extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.pages = [];\r\n        for (const [k, v] of props.pages.entries()) {\r\n            this.pages.push(v);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let selectedPage = this.props.selected;\r\n        return (\r\n            <div className=\"pagecontainer-area\">\r\n                {this.pages.map((entry, index)=>{\r\n                    let showPage = selectedPage == index?\"\":\"none\";\r\n                    if(entry.refresh){\r\n                        if(selectedPage == index){\r\n                            return <div key={index}>{entry.obj}</div>;\r\n                        }else{\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return (\r\n                        <div key={index} style={{display:showPage}}>\r\n                            {entry.obj}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageContainer;","import React, { Component } from 'react';\r\n\r\nclass NavLogo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"navpage-logo\">\r\n                <img className=\"navpage-logo-icon\" src=\"../imgs/logo.png\" /><div className=\"navpage-logo-title\">{this.props.title}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavLogo","function selectPage(id) {\r\n    var evt = new CustomEvent('selectpage', { detail: id });\r\n    window.dispatchEvent(evt);\r\n}\r\n\r\nlet pagetool = {\r\n    selectPage\r\n}\r\n\r\nexport default pagetool;","import React, { Component } from 'react';\r\nimport NavLogo from './navlogo';\r\nimport PageTool from '../tools/pagetool';\r\nimport {Menu, Icon} from 'antd';\r\n\r\nimport './layout.css';\r\n\r\nclass NavPageView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.pages = props.pages;\r\n        this.invokeSelectPage = props.selectPage;\r\n        this.itemList = [];\r\n        this.setupPage();\r\n    }\r\n\r\n    setupPage() {\r\n        this.pages.forEach((page, id) => {\r\n            let name = page.name;\r\n            let src = \"../../../../imgs/\" + page.name.toLowerCase() + \"_icon.png\";\r\n            let title = page.title;\r\n            let icon = page.icon;\r\n\r\n            this.itemList.push({\r\n                id: id,\r\n                name: name,\r\n                title: title,\r\n                img: src,\r\n                icon: icon\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClick(id){\r\n        PageTool.selectPage(id);\r\n    }\r\n\r\n    buildIcon(customIcon, img, icon){\r\n        if(customIcon){\r\n            return <img className=\"navpage-item-icon\" src={img}/>\r\n        }else{\r\n            return <Icon type={icon} />    \r\n        }\r\n    }\r\n\r\n    render() {\r\n        let logo = this.props.showLogo?<NavLogo title={this.props.title}/>:\"\";\r\n        return (\r\n            <div className=\"navpage-area\">\r\n                {logo}\r\n                <Menu\r\n                    defaultSelectedKeys={[this.props.selected + '']}\r\n                    defaultOpenKeys={[this.props.selected + '']}\r\n                    mode=\"inline\"\r\n                >\r\n                    {this.itemList.map(item => \r\n                    <Menu.Item onClick={()=>this.handleClick(item.id)} key={item.id} title={item.title}>\r\n                        {this.buildIcon(this.props.customIcon, item.img, item.icon)}\r\n                        <p className=\"navpage-item-name\">{item.title}</p>\r\n                    </Menu.Item>\r\n                    )}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NavPageView","import axios from \"axios\";\r\nimport qs from 'qs';\r\n\r\nconst server = \"http://127.0.0.1:8000/api/\";\r\n\r\nfunction request(req, params, callback){\r\n    if(params == null){\r\n        axios.post(server + req).then(function(response) {\r\n            callback(response.data);\r\n        }).catch(function(error) {\r\n            callback({status:500, data: error});\r\n        });\r\n        return;\r\n    }\r\n    axios.post(server + req, qs.stringify(params)).then(function(response) {\r\n        callback(response.data);\r\n    }).catch(function(error) {\r\n        callback({status:500, data: error});\r\n    });\r\n}\r\n\r\nexport default request;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Col, Row } from 'antd';\r\nimport request from '../../request';\r\n\r\nconst REFRESH_INTERVAL = 5000;\r\nclass BlockChainInfoPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            height: 0,\r\n            mci: 0,\r\n            isCommittee: false,\r\n        }\r\n    }\r\n\r\n    onInterval(){\r\n        request(\"getinfo\", {}, (res)=>{\r\n            if(res.status === 200){\r\n                this.setState({\r\n                    height: res.data.info.currentHeight,\r\n                    mci: res.data.info.currentMCI,\r\n                    isCommittee: res.data.isCommittee\r\n                });\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.intervalObj = setInterval(() => this.onInterval(), REFRESH_INTERVAL);\r\n        this.onInterval();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalObj);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"homepage-panel blockchaininfo-panel\">\r\n                <h2 className=\"panel-title\">区块链信息</h2>\r\n                <Row gutter={16}>\r\n                    <Col className=\"gutter-row\" span={1}></Col>\r\n                    <Col className=\"gutter-row\" span={7}>\r\n                        <Card className=\"blockchaininfo-card\" title=\"区块高度\" bordered={false} style={{ width: 300 }}>\r\n                            <h3>{this.state.height}</h3>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"gutter-row\" span={7}>\r\n                        <Card className=\"blockchaininfo-card\" title=\"主链索引\" bordered={false} style={{ width: 300 }}>\r\n                            <h3>{this.state.mci}</h3>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"gutter-row\" span={7}>\r\n                        <Card className=\"blockchaininfo-card\" title=\"委员会\" bordered={false} style={{ width: 300 }}>\r\n                            <h3>{this.state.isCommittee?\"是\":\"否\"}</h3>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"gutter-row\" span={1}></Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BlockChainInfoPanel;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Row, Col, message } from 'antd';\r\n\r\nimport request from '../../request';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst REFRESH_INTERVAL = 1000;\r\nconst DATACAP = 10;\r\n\r\nlet dataset = {\r\n    labels: [],\r\n    datasets: [\r\n        {\r\n            label: '挖矿速度',\r\n            fill: \"start\",\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(64,169,255,0.4)',\r\n            borderColor: 'rgba(64,169,255,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(64,169,255,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(64,169,255,1)',\r\n            pointHoverBorderColor: 'rgba(64,169,255,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: []\r\n        }\r\n    ]\r\n};\r\n\r\nlet options = {\r\n    animation: false,\r\n    scales: {\r\n        yAxes: [{\r\n            ticks: {\r\n                beginAtZero: true\r\n            }\r\n        }]\r\n    }\r\n};\r\n\r\nclass MiningController extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ismining: false,\r\n            data: dataset\r\n        }\r\n    }\r\n\r\n    handleStartMining() {\r\n        let action = this.state.ismining ? \"停止\" : \"启动\"\r\n        request(\"getminingaddr\", {}, (res) => {\r\n            let address = res.data;\r\n            console.log(address)\r\n            if(res.status == 200){\r\n                request(\"startmining\", {ncore:4, address: address}, (res) => {\r\n                    if (res.status === 200) {\r\n                        this.setState({\r\n                            ismining: !this.state.ismining\r\n                        });\r\n                        console.log(res);\r\n                        message.success(action + \"挖矿成功!\");\r\n                        if (this.state.ismining) {\r\n                            this.startRecord();\r\n                        } else {\r\n                            this.stopRecord();\r\n                        }\r\n                    } else {\r\n                        console.log(res.data);\r\n                        message.error(action + \"挖矿失败!\");\r\n                    }\r\n                });\r\n            }else{\r\n                message.error(\"获取挖矿地址错误！请重新设置挖矿地址\");\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    timeFormat(time) {\r\n        let timeFmt = time.getFullYear() + \"-\" + (time.getMonth() + 1) + \"-\" + time.getDate() + \" \";\r\n        timeFmt = timeFmt + time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\r\n        return timeFmt;\r\n    }\r\n    onInterval() {\r\n        //2018-11-29 14:47:49\r\n        let endTime = this.timeFormat(new Date());\r\n        request(\"getcurrentspeed\", {}, (res) => {\r\n            if(this.state.data.datasets[0].data.length >= DATACAP){\r\n                this.state.data.datasets[0].data.splice(0, 1);\r\n                this.state.data.labels.splice(0, 1);\r\n            }\r\n            this.state.data.datasets[0].data.push(res.data);\r\n            this.state.data.labels.push(endTime);\r\n            this.setState({\r\n                data:this.state.data\r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        request(\"ismining\", {}, (res) => {\r\n            if (res.status == 200 && res.data) {\r\n                this.setState({\r\n                    ismining: res.data\r\n                });\r\n                this.startRecord();\r\n            }\r\n        })\r\n    }\r\n\r\n    startRecord() {\r\n        this.intervalObj = setInterval(() => this.onInterval(), REFRESH_INTERVAL);\r\n        this.onInterval();\r\n    }\r\n\r\n    stopRecord() {\r\n        clearInterval(this.intervalObj);\r\n    }\r\n\r\n    render() {\r\n        let btn = <Button onClick={() => this.handleStartMining()} type=\"primary\">启动挖矿</Button>\r\n        if (this.state.ismining) {\r\n            btn = <Button onClick={() => this.handleStartMining()}>停止挖矿</Button>;\r\n        }\r\n        return (\r\n            <div className=\"homepage-panel mining-controller\">\r\n                <h2 className=\"panel-title\">挖矿控制</h2>\r\n                <Row gutter={16}>\r\n                    <Col span={1}>\r\n                    </Col>\r\n                    <Col span={7}>\r\n                        {btn}\r\n                    </Col>\r\n                    <Col span={1}>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={16}>\r\n                    <Col span={1}>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Line data={this.state.data} options={options} height=\"90\" redraw/>\r\n                    </Col>\r\n                    <Col span={1}>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default MiningController;\r\n","import React, { Component } from \"react\";\r\nimport {Button, Row, Col} from 'antd';\r\nimport BlockChainInfoPanel from \"./blockchaininfopanel\";\r\nimport MiningController from './miningcontroller';\r\n\r\nimport './layout.css';\r\nclass HomePage extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"homepage\">\r\n                <BlockChainInfoPanel />\r\n                <MiningController />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MiningPage extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                对不起，该功能暂未实现\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MiningPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass RewardPage extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n            对不起，该功能暂未实现\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default RewardPage;\r\n","import React, { Component } from \"react\";\r\nimport {Input, Form, Button, message} from \"antd\";\r\nimport request from '../../request';\r\n\r\nconst FormItem = Form.Item;\r\nclass SettingPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            miningAddress: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        request(\"getminingaddr\", {}, (res)=>{\r\n            if(res.status == 200){\r\n                this.setState({\r\n                    miningAddress:res.data\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleMiningAddress(e){\r\n        this.setState({\r\n            miningAddress: e.target.value\r\n        });\r\n    }\r\n    handleSubmit(){\r\n        let addr = this.state.miningAddress;\r\n        request(\"updateminingaddr\", {address: addr}, (res)=>{\r\n            if(res.status == 200){\r\n                message.success(\"挖矿地址修改成功!\");\r\n            }else{\r\n                message.error(\"挖矿地址修改失败!\");\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"setting-item\">\r\n                    <p>挖矿地址：</p>\r\n                    <FormItem\r\n                        hasFeedback\r\n                        validateStatus=\"\"\r\n                        help=\"\"\r\n                    >\r\n                        <Input style={{ width: 400 }} placeholder=\"请输入挖矿地址\" onChange={(e) => this.handleMiningAddress(e)} value={this.state.miningAddress} />\r\n                    </FormItem>\r\n                </div>\r\n\r\n                <Button type=\"primary\" onClick={()=>this.handleSubmit()}>更改</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SettingPage;\r\n","import React, { Component } from \"react\";\r\nimport {Icon, Menu, Dropdown} from 'antd';\r\n\r\nimport './layout.css';\r\n\r\nclass HeaderView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.menu = (\r\n            <div className=\"account-panel-menu-area\">\r\n              <Menu selectedKeys={[]}>\r\n                <Menu.Item key=\"0\" onClick={() => this.handleLogout()}>\r\n                  <Icon type=\"lock\" theme=\"outlined\" />\r\n                  退出登陆\r\n                </Menu.Item>\r\n              </Menu>\r\n            </div>\r\n          );\r\n    }\r\n    handleLogout(){\r\n        var evt = new CustomEvent('login', { detail: false });\r\n        window.dispatchEvent(evt);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dropdown overlay={this.menu} trigger={[\"click\"]}>\r\n                <div className=\"user-panel\">\r\n                    <Icon style={{fontSize:20}} type=\"user\" />\r\n                    <span className=\"user-panel-name\">Admin</span>\r\n                </div>\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default HeaderView;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FooterView extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default FooterView;\r\n","import React, { Component } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport PageContainer from './pagecontainer';\r\nimport NavPage from './viewpart/nav/navpageview';\r\nimport HomePage from './viewpart/home/homepage';\r\nimport MiningPage from './viewpart/mining/miningpage';\r\nimport RewardPage from './viewpart/reward/rewardpage';\r\nimport SettingPage from './viewpart/setting/settingpage';\r\nimport HeaderView from './viewpart/header/headerview';\r\nimport FooterView from './viewpart/footer/footerview';\r\n\r\nconst { Header, Content, Sider, Footer } = Layout;\r\n\r\nclass MainPageView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.currentID = 0;\r\n        this.state = {\r\n            pages: new Map(),\r\n            selectedPage: 0\r\n        }\r\n        this.setupPages();\r\n        window.addEventListener(\"selectpage\", (e) => this.selectPage(e));\r\n    }\r\n    setupPages() {\r\n        this.addPage(\"Home\", \"主页\", <HomePage />, \"home\");\r\n        // this.addPage(\"Mining\", \"挖矿记录\", <MiningPage />, \"file-search\");\r\n        // this.addPage(\"Reward\", \"奖励记录\", <RewardPage />, \"dollar\");\r\n        this.addPage(\"Setting\", \"设置\", <SettingPage />, \"setting\");\r\n    }\r\n\r\n    selectPage(e) {\r\n        let id = e.detail;\r\n        if (this.state.selected != id) {\r\n            this.setState({\r\n                selected: id\r\n            });\r\n        }\r\n        this.setState({selectedPage: id});\r\n        sessionStorage.setItem(\"selectedPage\", id);\r\n    }\r\n\r\n    addPage(name, title, obj, icon, refresh = false) {\r\n        this.state.pages.set(this.currentID, {\r\n            id: this.currentID,\r\n            name: name,\r\n            title: title,\r\n            obj: obj,\r\n            icon: icon,\r\n            refresh: refresh,\r\n        });\r\n        return this.currentID++;\r\n    }\r\n    render() {\r\n        let selectedPage = sessionStorage.getItem(\"selectedPage\");\r\n        if(selectedPage == null){\r\n            selectedPage = 0;\r\n        }\r\n        return (\r\n            <Layout className=\"app-content\">\r\n                <Layout>\r\n                    <Sider className=\"sider\"><NavPage customIcon={false} pages={this.state.pages} selected={selectedPage} showLogo={true} title=\"Gravity\" /></Sider>\r\n                    <Layout>\r\n                        <Header className=\"header\"><HeaderView /></Header>\r\n                        <Content className=\"content\"><PageContainer  pages={this.state.pages} selected={selectedPage}/></Content>\r\n                   \r\n                        <Footer className=\"footer\"><FooterView /></Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default MainPageView;\r\n","import React, { Component } from 'react';\r\nimport { Input, Form, Button, Icon, Row, Col } from 'antd';\r\n\r\nimport request from './request';\r\n\r\nconst FormItem = Form.Item;\r\nclass LoginPageView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uname: \"\",\r\n            password: \"\",\r\n            passwordHelp: { status: \"\", help: \"\" },\r\n        }\r\n    }\r\n    handleUserName(e) {\r\n        this.setState({\r\n            uname: e.target.value\r\n        });\r\n    }\r\n    handlePasswordName(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin() {\r\n        let params = {\r\n            uname: this.state.uname,\r\n            password: this.state.password\r\n        }\r\n        request('login', params, (res) => {\r\n            if (res.status === 200 && res.data === \"success\") {\r\n                this.setPasswordFormStatus(\"\", \"\");\r\n                var evt = new CustomEvent('login', { detail: true });\r\n                window.dispatchEvent(evt);\r\n            } else {\r\n                this.setPasswordFormStatus(\"error\", \"密码输入错误！\");\r\n            }\r\n        });\r\n    }\r\n\r\n    setPasswordFormStatus(status, help) {\r\n        this.setState({\r\n            passwordHelp: { status: status, help: help }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <div className=\"login-form\" style={{margin:\"0 auto\", width:\"405px\"}}>\r\n                    <Row gutter={16}>\r\n                        <Col span={24}>\r\n                            <div className=\"login-logo\">\r\n                                <img className=\"login-logo-icon\" src=\"../imgs/logo.png\" /><div className=\"login-logo-title\">Gravity挖矿程序</div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span={7}>\r\n                            <div className=\"login-item\">\r\n                                <FormItem\r\n                                    hasFeedback\r\n                                    validateStatus=\"\"\r\n                                    help=\"\"\r\n                                >\r\n                                    <Input prefix={\r\n                                        <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                                    }\r\n                                        style={{ width: 400 }}\r\n                                        placeholder=\"请输入用户名\"\r\n                                        onChange={(e) => this.handleUserName(e)}\r\n                                        value={this.state.uname} />\r\n                                </FormItem>\r\n                            </div>\r\n                            <div className=\"login-item\">\r\n                                <FormItem\r\n                                    hasFeedback\r\n                                    validateStatus={this.state.passwordHelp.status}\r\n                                    help={this.state.passwordHelp.help}\r\n                                >\r\n                                    <Input prefix={\r\n                                        <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                                    }\r\n                                        style={{ width: 400 }}\r\n                                        placeholder=\"请输入密码\"\r\n                                        type=\"password\"\r\n                                        onChange={(e) => this.handlePasswordName(e)}\r\n                                        value={this.state.password} />\r\n                                </FormItem>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                            <Button style={{float:\"right\"}} type=\"primary\" onClick={() => this.handleLogin()}>登陆</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPageView;","import React, { Component } from 'react';\nimport MainPageView from './app/mainpageview';\nimport LoginPageView from './app/loginpageview';\n\nimport 'antd/dist/antd.css';\nimport './theme/layout.css';\nimport './theme/style.css';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false\n    }\n    window.addEventListener(\"login\", (e) => this.setLogin(e));\n  }\n\n  setLogin(e){\n    console.log(\">>>>>\", e)\n    if(e.detail){\n      sessionStorage.setItem(\"login\", e);\n    }else{\n      sessionStorage.removeItem(\"login\");\n    }\n    this.setState({\n      isLogin:e\n    });\n  }\n  \n  render() {\n    let isLogin = sessionStorage.getItem(\"login\");\n    if (isLogin == null) {\n      return (\n        <div className=\"App\">\n          <LoginPageView />\n        </div>\n      )\n    }\n    return (\n      <div className=\"App\">\n        <MainPageView />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}